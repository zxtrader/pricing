environment: presentation

docker:
  cpservice:
    migrationImage: devdocker.infra.kube/cryptopay/cpservice-migration
    serviceImage: devdocker.infra.kube/cryptopay/cpservice-aggrless
    tag: latest

ingress:
  API-Internal:
    type: internal
    domain: api-presentation-cryptopay.dev.kube
    certSecretName: dev
    # API does not require client's certificate
    #backendCaSecretName:
    backendServiceName: cpservice
    backendServicePort: 80
    backendServiceInsecure: yes
  API-External:
    type: external
    domain: api-testnet.cryptopay.band
    certSecretName: cryptopay-band
    # API does not require client's certificate
    #backendCaSecretName:
    backendServiceName: cpservice
    backendServicePort: 80
    backendServiceInsecure: yes
  SysAdmin-Internal:
    type: internal
    domain: sysadmin-presentation-cryptopay.dev.kube
    certSecretName: dev
    backendServiceName: cpservice
    backendServicePort: 80
    backendServiceInsecure: yes
  Dashboard-Internal:
    type: internal
    domain: dashboard-presentation-cryptopay.dev.kube
    certSecretName: dev
    #backendCaSecretName: ca-secret
    backendServiceName: cpservice
    backendServicePort: 80
    backendServiceInsecure: yes
  Dashboard-External:
    type: external
    domain: dashboard-testnet.cryptopay.band
    certSecretName: cryptopay-band
    #backendCaSecretName: ca-secret
    backendServiceName: cpservice
    backendServicePort: 80
    backendServiceInsecure: yes
  Landing-External:
    type: external
    domain: testnet.cryptopay.band
    certSecretName: cryptopay-band
    #backendCaSecretName: ca-secret
    backendServiceName: cpservice
    backendServicePort: 80
    backendServiceInsecure: yes
  Landing-Internal:
    type: internal
    domain: presentation-cryptopay.dev.kube
    certSecretName: dev
    backendServiceName: cpservice
    backendServicePort: 80
    backendServiceInsecure: yes
