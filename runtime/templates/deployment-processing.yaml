apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ .Chart.Name }}-processing{{ template "suffix" . }}
  name: {{ .Chart.Name }}-processing{{ template "suffix" . }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-processing{{ template "suffix" . }}
    spec:
      # initContainers:
      # - name: migration
      #   image: {{ .Values.docker.processing.migrationImage }}:{{ .Values.docker.processing.tag }}
      #   volumeMounts:
      #   - name: secret-files-migration
      #     mountPath: /etc/cexiolabs/cryptopay/secrets
      #     # The service will delete all files after read its. So need write access.
      #     readOnly: false
      #   envFrom:
      #   - configMapRef:
      #       name: processing-migration-envvars
      containers:
      - name: processing
        image: {{ .Values.docker.processing.serviceImage }}:{{ .Values.docker.processing.tag }}
{{- if .Values.docker.processing.args }}
        args:
{{ range .Values.docker.processing.args }}
          - {{ . }}
{{ end }}
{{- end }}
        ports:
        - containerPort: 8080
          protocol: TCP
{{- if ne .Values.environment "production" }}
        - containerPort: 8081
          protocol: TCP
{{- end }}
        - containerPort: 8082
          protocol: TCP
        - containerPort: 8083
          protocol: TCP
        - containerPort: 9090
          protocol: TCP
        volumeMounts:
        - name: processing-files
          mountPath: /etc/cexiolabs/cryptopay
          readOnly: true
        - name: secret-certificate
          mountPath: /etc/cexiolabs/cryptopay/ssl
          readOnly: true
        - name: secret-files
          mountPath: /etc/cexiolabs/cryptopay/secrets
          # The service will delete all files after read its. So need write access.
          readOnly: false
        envFrom:
        - configMapRef:
            name: processing-envvars
        env:
        - name: RUNTIME
          value: {{ .Values.environment }}
        - name: HTTP_PORT
          value: "8083"
        - name: HTTPS_PORT
          value: "8483"
{{- if .Values.docker.processing.cmdbin }}
        - name: CMDBIN
          value: {{ .Values.docker.processing.cmdbin }}
{{- end }}
        # livenessProbe:
        #   httpGet:
        #     path: /livenessProbe
        #     port: 9090
        #     scheme: HTTP
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        # readinessProbe:
        #   httpGet:
        #     path: /readinessProbe
        #     port: 9090
        #     scheme: HTTP
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
      - name: echo
        image: mendhak/http-https-echo
        ports:
        - containerPort: 80
          protocol: TCP
{{ if and (eq .Release.Name "tag") (eq .Values.environment "evolution") }}
      - name: notifier
        image: docker.registry.zxteam.net/pub/node/notifier/service:master.4cb52cff
        env:
        - name: "server.main.listenPort"
          value: "8084"
        - name: "endpoint.subscriber.bindPath"
          value: "/v2/callback/cryptoproviders/cex/wtf2pss-subscriber"
        ports:
        - containerPort: 8084
          protocol: TCP
{{ end }}
      volumes:
      - name: processing-files
        configMap:
          name: processing-files
      - name: secret-files
        secret:
          secretName: processing
      - name: secret-certificate
        secret:
          secretName: {{ .Chart.Name }}-processing{{ template "suffix" . }}-certificate
