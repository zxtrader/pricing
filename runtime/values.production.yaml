zone: production

application:

  api:
    env:
      IdentityServerAuthentication__ValidIssuers: https://id.cexpay.io
      WTFProviderConfigurationFile: /etc/cexiolabs/cexpay.api/legacy-cpservice-config/WTF-prod.json

  board:
    env:
      CEXPAY_IDENTITY_API_URL: https://id.cexpay.io/
      CEXPAY_PAYTOOLS_INVOICE_API_URL: https://api.cexpay.io/paytools/v1/invoice/
      CEXPAY_PROCESSING_V2_API_URL: https://api.cexpay.io/v2/
      CEXPAY_PROCESSING_V3_API_URL: https://api.cexpay.io/v3/
      OAUTH_CLIENT_ID: CEXPay.Board
      OAUTH_CALLBACK_PATH: /profile/oauth-challenge/
      POST_LOGOUT_REDIRECT_URL: https://www.cexpay.io

  gatehostinternal:
    env:
      GATE_BASE_URL: https://gate.cexpay.io

  identity:
    env:
      Authentication__indexer: ""
      DeploymentOpts__AccountApiEndpointUrl: "https://id.cexpay.io/account/"
      Emailer__SendGrid__senderEmail: "no-reply-identity@cexpay.io"

  invoice:
    args:
      [
        "--config-json-file=/etc/cexiolabs/cexpay.invoice/appsettings.json",
        "--config-keyperfile-directory=/etc/cexiolabs/cexpay.invoice/secrets",
        "--config-env",
        "--log-json"
      ]
    env:
      CorsOrigins__0: "https://board.cexpay.io"
      Emailer__SendGrid__senderEmail: "no-reply-invoice@cexpay.io"
      IdentityServerAuthentication__ValidIssuers: https://id.cexpay.io

  processing:
    args:
      [
        "--config-file=/etc/cexiolabs/cexpay.processing/service.config",
        "--config-toml-file=/etc/cexiolabs/cexpay.processing/service.toml",
        "--config-toml-file=/etc/cexiolabs/cexpay.processing/service-setup.toml",
        "--config-toml-file=/etc/cexiolabs/cexpay.processing/service-zone-production.toml",
        "--config-secrets-dir=/etc/cexiolabs/cexpay/secrets",
        "--config-env"
      ]
    env:
      # setup.createCryptoWallet_indexer: ""
      setup.createExchange_indexer: ""
      setup.setMissingDepositTransaction_indexer: ""
      setup.setMissingWithdrawalTransaction_indexer: ""
      setup.subscribeNotification_indexer: ""

ingress:

  API:
    blue:
      domain: api.cexpay.io
      certSecretName: ingress-cexpayio-certificate
    paths:
      "/":
        backendServiceName: api
        backendServicePort: 8443
      "/v2/":
        backendServiceName: processing
        backendServicePort: 8080
      "/v2/dashboard/":
        backendServiceName: processing
        backendServicePort: 8082
      # "/paytools/v1/":
      #   backendServiceName: ptinvoice
      #   backendServicePort: 8443


  API-Obsolete-1:
    blue:
      domain: api.pay-cex.io
      certSecretName: ingress-pay-cex-certificate
    paths:
      "/":
        backendServiceName: api
        backendServicePort: 8443
      "/v2/":
        backendServiceName: processing
        backendServicePort: 8080
      "/v2/dashboard/":
        backendServiceName: processing
        backendServicePort: 8082

  API-Obsolete-2:
    blue:
      domain: api.cryptopay.band
      certSecretName: ingress-gate-api-dashboard
    paths:
      "/":
        backendServiceName: api
        backendServicePort: 8443
      "/v2/":
        backendServiceName: processing
        backendServicePort: 8080
      "/v2/dashboard/":
        backendServiceName: processing
        backendServicePort: 8082

  API-Internal:
    blue:
      domain: api.prodcryptopay.kube
      certSecretName: callback
    nonblue:
      # Make final domain "api-<HelmReleaseName>.prodcryptopay.kube" like a:
      #   api-green.prodcryptopay.kube
      domainPerfix: api-
      domainSuffix: .prodcryptopay.kube
      certSecretName: wildcard-prodcryptopay-kube
    paths:
      "/":
        backendServiceName: api
        backendServicePort: 8443
      "/v2/":
        backendServiceName: processing
        backendServicePort: 8080
      "/v2/dashboard/":
        backendServiceName: processing
        backendServicePort: 8082

  Board-Internal:
    nonblue:
      # Make final domain "board-<HelmReleaseName>.prodcryptopay.kube" like a:
      #   board-green.prodcryptopay.kube
      domainPerfix: board-
      domainSuffix: .prodcryptopay.kube
      certSecretName: wildcard-prodcryptopay-kube
    paths:
      "/":
        backendServiceName: board
        backendServicePort: 8443

  Callbacks-Internal:
    blue:
      domain: callback.prodcryptopay.kube
      certSecretName: wildcard-prodcryptopay-kube
    paths:
      "/v2/callback/cryptoproviders/pss-provider-wtf2/":
        backendServiceName: processing
        backendServicePort: 8084
      "/ws/":
        backendServiceName: processing
        backendServicePort: 8086

  Gate:
    blue:
      domain: gate.cexpay.io
      certSecretName: ingress-cexpayio-certificate
    nonblue:
      # Make final domain "gate-<HelmReleaseName>.prodcryptopay.kube" like a:
      #   gate-green.prodcryptopay.kube
      domainPerfix: gate-
      domainSuffix: .prodcryptopay.kube
      certSecretName: wildcard-prodcryptopay-kube
    paths:
      "/":
        backendServiceName: gatehostinternal
        backendServicePort: 8443

  Identity:
    blue:
      domain: id.cexpay.io
      certSecretName: ingress-cexpayio-certificate
    nonblue:
      # Make final domain "id-<HelmReleaseName>.prodcryptopay.kube" like a:
      #   id-green.prodcryptopay.kube
      domainPerfix: id-
      domainSuffix: .prodcryptopay.kube
      certSecretName: wildcard-prodcryptopay-kube
    paths:
      "/":
        backendServiceName: identity
        backendServicePort: 8443

  Identity-Obsolete-1:
    blue:
      domain: id.pay-cex.io
      certSecretName: ingress-pay-cex-certificate
    paths:
      "/":
        backendServiceName: identity
        backendServicePort: 8443

  Invoice:
    blue:
      domain: invoice.cexpay.io
      certSecretName: ingress-cexpayio-certificate
    nonblue:
      # Make final domain "invoice-<HelmReleaseName>.prodcryptopay.kube" like a:
      #   invoice-green.prodcryptopay.kube
      domainPerfix: invoice-
      domainSuffix: .prodcryptopay.kube
      certSecretName: wildcard-prodcryptopay-kube
    paths:
      "/":
        backendServiceName: invoice
        backendServicePort: 8443

  MessengerBridge-Internal:
    # THIS temporary endpoint just for testing purposes
    blue:
      domain: messengerbridge.prodcryptopay.kube
      certSecretName: wildcard-prodcryptopay-kube
    nonblue:
      # Make final domain "messengerbridge-<HelmReleaseName>.prodcryptopay.kube" like a:
      #   messengerbridge-green.prodcryptopay.kube
      domainPerfix: messengerbridge-
      domainSuffix: .prodcryptopay.kube
      certSecretName: wildcard-prodcryptopay-kube
    paths:
      "/":
        backendServiceName: messengerbridge
        backendServicePort: 8443
