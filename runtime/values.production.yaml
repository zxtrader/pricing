environment: production

application:
  dashboard:
    env:
      WTFProviderConfigurationFile: /etc/cexiolabs/cryptopay.dashboard/legacy-cpservice-config/WTF-prod.json
  processing:
    args:
      [
        "--config-file=/etc/cexiolabs/cryptopay.processing/service.config",
        "--config-toml-file=/etc/cexiolabs/cryptopay.processing/service.toml",
        "--config-toml-file=/etc/cexiolabs/cryptopay.processing/service-setup.toml",
        "--config-toml-file=/etc/cexiolabs/cryptopay.processing/service-setup-dach.toml",
        "--config-toml-file=/etc/cexiolabs/cryptopay.processing/service-setup-goldenpay.toml",
        "--config-toml-file=/etc/cexiolabs/cryptopay.processing/service-production.toml",
        "--config-secrets-dir=/etc/cexiolabs/cryptopay/secrets",
        "--config-secrets-dir=/etc/cexiolabs/cryptopay/secrets-setup",
        "--config-env"
#        "--runtime-gate-email-sender=nodemailer"
      ]

ingress:
  API:
    type: external
    domain: api.cryptopay.band
    certSecretName: ingress-gate-api-dashboard
    # API does not require client's certificate
    #backendCaSecretName:
    nginxConfigurationSnippet: |
      rewrite ^/$ /v2/time redirect;
    paths:
      "/":
        backendServiceName: processing
        backendServicePort: 8080
  Callbacks-Internal:
    type: internal
    domain: callback.prodcryptopay.kube
    certSecretName: callback
    # Callbacks does not require client's certificate
    #backendCaSecretName:
    paths:
      "/v2/callback/cryptoproviders/pss-provider-wtf2/":
        backendServiceName: processing
        backendServicePort: 8084
      "/ws/":
        backendServiceName: processing
        backendServicePort: 8086
  Dashboard:
    type: external
    domain: dashboard.cryptopay.band
    certSecretName: ingress-gate-api-dashboard
    nginxConfigurationSnippet: |
      add_header Last-Modified $date_gmt;
      add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
      if_modified_since off;
      expires off;
      etag off;
    # Dashboard does not require client's certificate
    #backendCaSecretName:
    paths:
      "/":
        backendServiceName: dashboard
        backendServicePort: 8445
      "/v2/dashboard/":
        backendServiceName: processing
        backendServicePort: 8082
  Gateway:
    type: external
    domain: gate.cryptopay.band
    certSecretName: ingress-gate-api-dashboard
    # Gateway does not require client's certificate
    #backendCaSecretName:
    paths:
      "/":
        backendServiceName: gateuiserve
        backendServicePort: 8080
      "/v2/gate/":
        backendServiceName: processing
        backendServicePort: 8085
      "/v2/gate-callback/":
        backendServiceName: processing
        backendServicePort: 8085
  Identity:
    type: external
    domain: id.cryptopay.band
    certSecretName: ingress-gate-api-dashboard
    paths:
      "/":
        backendServiceName: identity
        backendServicePort: 8443
  Identity-Internal:
    # THIS temporary endpoint just for testing purposes
    type: internal
    domain: id-cryptopay.prodcryptopay.kube
    certSecretName: callback
    paths:
      "/":
        backendServiceName: identity
        backendServicePort: 8443
  MessengerBridge-Internal:
    # THIS temporary endpoint just for testing purposes
    type: internal
    domain: messengerbridge-cryptopay.prodcryptopay.kube
    certSecretName: callback
    paths:
      "/":
        backendServiceName: messengerbridge
        backendServicePort: 8443
