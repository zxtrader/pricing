variables:
  IMAGE_HELM2: alpine/helm:2.14.0
  IMAGE_HELM3: harbor.infra.kube/infra/helm:3
  IMAGE_KUBECTL: bitnami/kubectl:1.20.2
  RUNTIME_RELEASE: blue # blue/green  (in DEV we are able to deploy from the branch, using branch name as RUNTIME_RELEASE)

.functions: &functions |
  function verify_runtime_version_helm2() {
    if [ -z "${CI_COMMIT_TAG}" ]; then
      echo "The function verify_runtime_version_helm3() is able to use for tags only. Variable CI_COMMIT_TAG is not set." >&2
      exit 127
    fi
    local EXPECTED_VERSION=$(echo "${CI_COMMIT_TAG}" | cut -d- -f1)
    local HELM_CHART_APP_VERSION=$(grep -e '^appVersion:' runtime/Chart.yaml | cut -d ':' -f 2 | tr -d '[:space:]')
    if [ "$HELM_CHART_APP_VERSION-runtime-helm2" != "$CI_COMMIT_TAG" ]; then
      echo "Helm Chart appVersion '${HELM_CHART_APP_VERSION}' is not same as tag version '${EXPECTED_VERSION}'. Your tag should named as '$HELM_CHART_APP_VERSION-runtime-helm2' for the case." >&2
      exit 255
    fi
  }
  function verify_runtime_version_helm3() {
    if [ -z "${CI_COMMIT_TAG}" ]; then
      echo "The function verify_runtime_version_helm3() is able to use for tags only. Variable CI_COMMIT_TAG is not set." >&2
      exit 127
    fi
    local EXPECTED_VERSION=$(echo "${CI_COMMIT_TAG}" | cut -d- -f1)
    local HELM_CHART_APP_VERSION=$(grep -e '^appVersion:' runtime/Chart.yaml | cut -d ':' -f 2 | tr -d '[:space:]')
    if [ "$HELM_CHART_APP_VERSION-runtime" != "$CI_COMMIT_TAG" ]; then
      echo "Helm Chart appVersion '${HELM_CHART_APP_VERSION}' is not same as tag version '${EXPECTED_VERSION}'. Your tag should named as '$HELM_CHART_APP_VERSION-runtime' for the case." >&2
      exit 255
    fi
  }
  function kube_config_setup() {
    if [ -z "${KUBECONF_BASE64}" ]; then
      echo "kube_deploy_dev_image() wrong arguments. Expected environment variable KUBECONF_BASE64" >&2
      exit 1
    fi
    mkdir -p ~/.kube
    echo "$KUBECONF_BASE64" | base64 -d > ~/.kube/config
  }

before_script:
  - *functions

stages:
  - deploy
  - rollback
  - delete

include:
  - local: /.gitlab-ci-infratest.yml

# HELM 3 Runtime deployment TAGs
Helm3:1EVO:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-evolution" list
    - helm --namespace "cexiopay-evolution" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.evolution.yaml" "${RUNTIME_RELEASE}" .
    - helm --namespace "cexiopay-evolution" history "${RUNTIME_RELEASE}" --max=3
  when: manual
  environment:
    name: evolution
    url: https://evolution-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

Helm3:1EVO:rollback:runtime:
  stage: rollback
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-evolution" list
    - helm --namespace "cexiopay-evolution" history "${RUNTIME_RELEASE}" --max=3
    - helm --namespace "cexiopay-evolution" rollback --recreate-pods "${RUNTIME_RELEASE}" 0
    - helm --namespace "cexiopay-evolution" history "${RUNTIME_RELEASE}" --max=3
  when: manual
  environment:
    name: evolution
    url: https://evolution-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

Helm3:1EVO:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-evolution" list
    - helm --namespace "cexiopay-evolution" history "${RUNTIME_RELEASE}" --max=3
    - helm --namespace "cexiopay-evolution" uninstall  "${RUNTIME_RELEASE}"
  when: manual
  environment:
    name: evolution
    url: https://evolution-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

Helm3:2PRSN:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-presentation" list
    - helm --namespace "cexiopay-presentation" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.presentation.yaml" "${RUNTIME_RELEASE}" .
    - helm --namespace "cexiopay-presentation" history "${RUNTIME_RELEASE}" --max=3
  when: manual
  environment:
    name: presentation
    url: https://presentation-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

Helm3:2PRSN:rollback:runtime:
  stage: rollback
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-presentation" list
    - helm --namespace "cexiopay-presentation" history "${RUNTIME_RELEASE}" --max=3
    - helm --namespace "cexiopay-presentation" rollback --recreate-pods "${RUNTIME_RELEASE}" 0
    - helm --namespace "cexiopay-presentation" history "${RUNTIME_RELEASE}" --max=3
  when: manual
  environment:
    name: presentation
    url: https://presentation-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

Helm3:2PRSN:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-presentation" list
    - helm --namespace "cexiopay-presentation" history "${RUNTIME_RELEASE}" --max=3
    - helm --namespace "cexiopay-presentation" uninstall  "${RUNTIME_RELEASE}"
  when: manual
  environment:
    name: presentation
    url: https://presentation-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

# Helm3:4PROD:install:runtime:
#   stage: deploy
#   image:
#     name: ${IMAGE_HELM3}
#     entrypoint: [""]
#   script:
#     - verify_runtime_version_helm3
#     - kube_config_setup
#     - cd runtime
#     - helm --namespace "cryptopay" list
#     - helm --namespace "cryptopay" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.production.yaml" "${RUNTIME_RELEASE}" .
#     - helm --namespace "cryptopay" history "${RUNTIME_RELEASE}" --max=3
#   when: manual
#   environment:
#     name: production
#     url: https://pay-cex.io/
#   tags:
#     - crtpdpl
#   only:
#     refs:
#       - tags
#     variables:
#       - $CI_COMMIT_TAG =~ /-runtime$/

# Helm3:4PROD:rollback:runtime:
#   stage: rollback
#   image:
#     name: ${IMAGE_HELM3}
#     entrypoint: [""]
#   script:
#     - verify_runtime_version_helm3
#     - kube_config_setup
#     - cd runtime
#     - helm --namespace "cryptopay" list
#     - helm --namespace "cryptopay" history "${RUNTIME_RELEASE}" --max=3
#     - helm --namespace "cryptopay" rollback --recreate-pods "${RUNTIME_RELEASE}" 0
#     - helm --namespace "cryptopay" history "${RUNTIME_RELEASE}" --max=3
#   when: manual
#   environment:
#     name: production
#     url: https://pay-cex.io/
#   tags:
#     - crtpdpl
#   only:
#     refs:
#       - tags
#     variables:
#       - $CI_COMMIT_TAG =~ /-runtime$/

# Helm3:4PROD:delete:runtime:
#   stage: delete
#   image:
#     name: ${IMAGE_HELM3}
#     entrypoint: [""]
#   script:
#     - verify_runtime_version_helm3
#     - kube_config_setup
#     - cd runtime
#     - helm --namespace "cryptopay" list
#     - helm --namespace "cryptopay" history "${RUNTIME_RELEASE}" --max=3
#     - helm --namespace "cryptopay" uninstall  "${RUNTIME_RELEASE}"
#   when: manual
#   environment:
#     name: production
#     url: https://pay-cex.io/
#   tags:
#     - crtpdpl
#   only:
#     refs:
#       - tags
#     variables:
#       - $CI_COMMIT_TAG =~ /-runtime$/



# HELM 2 Runtime deployment TAGs
# Helm2:1EVO:install:runtime:
#   stage: deploy
#   image:
#     name: ${IMAGE_HELM2}
#     entrypoint: [""]
#   script:
#     - verify_runtime_version_helm2
#     - kube_config_setup
#     - cd runtime
#     - helm --tiller-namespace "cexiopay-evolution" list
#     - helm --tiller-namespace "cexiopay-evolution" upgrade --install --namespace "cexiopay-evolution"  --values "values-base.yaml" --values "values.evolution.yaml" "${RUNTIME_RELEASE}" .
#     - helm --tiller-namespace "cexiopay-evolution" history "${RUNTIME_RELEASE}" --max=3
#   when: manual
#   environment:
#     name: evolution
#     url: https://evolution-cexiopay.dev.kube
#   only:
#     refs:
#       - tags
#     variables:
#       - $CI_COMMIT_TAG =~ /-runtime-helm2$/

# Helm2:1EVO:rollback:runtime:
#   stage: rollback
#   image:
#     name: ${IMAGE_HELM2}
#     entrypoint: [""]
#   script:
#     - verify_runtime_version_helm2
#     - kube_config_setup
#     - cd runtime
#     - helm --tiller-namespace "cexiopay-evolution" list
#     - helm --tiller-namespace "cexiopay-evolution" history "${RUNTIME_RELEASE}" --max=3
#     - helm --tiller-namespace "cexiopay-evolution" rollback --recreate-pods "${RUNTIME_RELEASE}" 0
#     - helm --tiller-namespace "cexiopay-evolution" history "${RUNTIME_RELEASE}" --max=3
#   when: manual
#   environment:
#     name: evolution
#     url: https://evolution-cexiopay.dev.kube
#   only:
#     refs:
#       - tags
#     variables:
#       - $CI_COMMIT_TAG =~ /-runtime-helm2$/

# Helm2:1EVO:delete:runtime:
#   stage: delete
#   image:
#     name: ${IMAGE_HELM2}
#     entrypoint: [""]
#   script:
#     - verify_runtime_version_helm2
#     - kube_config_setup
#     - cd runtime
#     - helm --tiller-namespace "cexiopay-evolution" list
#     - helm --tiller-namespace "cexiopay-evolution" history "${RUNTIME_RELEASE}" --max=3
#     - helm --tiller-namespace "cexiopay-evolution" delete --purge "${RUNTIME_RELEASE}"
#   when: manual
#   environment:
#     name: evolution
#     url: https://evolution-cexiopay.dev.kube
#   only:
#     refs:
#       - tags
#     variables:
#       - $CI_COMMIT_TAG =~ /-runtime-helm2$/

# Helm2:2PRSN:install:runtime:
#   stage: deploy
#   image:
#     name: ${IMAGE_HELM2}
#     entrypoint: [""]
#   script:
#     - verify_runtime_version_helm2
#     - kube_config_setup
#     - cd runtime
#     - helm --tiller-namespace "cexiopay-presentation" list
#     - helm --tiller-namespace "cexiopay-presentation" upgrade --install --namespace "cexiopay-presentation"  --values "values-base.yaml" --values "values.presentation.yaml" "${RUNTIME_RELEASE}" .
#     - helm --tiller-namespace "cexiopay-presentation" history "${RUNTIME_RELEASE}" --max=3
#   when: manual
#   environment:
#     name: presentation
#     url: https://presentation-cexiopay.dev.kube
#   only:
#     refs:
#       - tags
#     variables:
#       - $CI_COMMIT_TAG =~ /-runtime-helm2$/

# Helm2:2PRSN:rollback:runtime:
#   stage: rollback
#   image:
#     name: ${IMAGE_HELM2}
#     entrypoint: [""]
#   script:
#     - verify_runtime_version_helm2
#     - kube_config_setup
#     - cd runtime
#     - helm --tiller-namespace "cexiopay-presentation" list
#     - helm --tiller-namespace "cexiopay-presentation" history "${RUNTIME_RELEASE}" --max=3
#     - helm --tiller-namespace "cexiopay-presentation" rollback --recreate-pods "${RUNTIME_RELEASE}" 0
#     - helm --tiller-namespace "cexiopay-presentation" history "${RUNTIME_RELEASE}" --max=3
#   when: manual
#   environment:
#     name: presentation
#     url: https://presentation-cexiopay.dev.kube
#   only:
#     refs:
#       - tags
#     variables:
#       - $CI_COMMIT_TAG =~ /-runtime-helm2$/

# Helm2:2PRSN:delete:runtime:
#   stage: delete
#   image:
#     name: ${IMAGE_HELM2}
#     entrypoint: [""]
#   script:
#     - verify_runtime_version_helm2
#     - kube_config_setup
#     - cd runtime
#     - helm --tiller-namespace "cexiopay-presentation" list
#     - helm --tiller-namespace "cexiopay-presentation" history "${RUNTIME_RELEASE}" --max=3
#     - helm --tiller-namespace "cexiopay-presentation" delete --purge "${RUNTIME_RELEASE}"
#   when: manual
#   environment:
#     name: presentation
#     url: https://presentation-cexiopay.dev.kube
#   only:
#     refs:
#       - tags
#     variables:
#       - $CI_COMMIT_TAG =~ /-runtime-helm2$/

Helm2:4PROD:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM2}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm2
    - kube_config_setup
    - cd runtime
    - helm --tiller-namespace "cryptopay" list
    - helm --tiller-namespace "cryptopay" upgrade --install --namespace "cryptopay"  --values "values-base.yaml" --values "values.production.yaml" "${RUNTIME_RELEASE}" .
    - helm --tiller-namespace "cryptopay" history "${RUNTIME_RELEASE}" --max=3
  when: manual
  environment:
    name: production
    url: https://pay-cex.io/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime-helm2$/

Helm2:4PROD:rollback:runtime:
  stage: rollback
  image:
    name: ${IMAGE_HELM2}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm2
    - kube_config_setup
    - cd runtime
    - helm --tiller-namespace "cryptopay" list
    - helm --tiller-namespace "cryptopay" history "${RUNTIME_RELEASE}" --max=3
    - helm --tiller-namespace "cryptopay" rollback --recreate-pods "${RUNTIME_RELEASE}" 0
    - helm --tiller-namespace "cryptopay" history "${RUNTIME_RELEASE}" --max=3
  when: manual
  environment:
    name: production
    url: https://pay-cex.io/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime-helm2$/

Helm2:4PROD:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM2}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm2
    - kube_config_setup
    - cd runtime
    - helm --tiller-namespace "cryptopay" list
    - helm --tiller-namespace "cryptopay" history "${RUNTIME_RELEASE}" --max=3
    - helm --tiller-namespace "cryptopay" delete --purge "${RUNTIME_RELEASE}"
  when: manual
  environment:
    name: production
    url: https://pay-cex.io/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime-helm2$/

#
#
# Database migration TAGs
#
#
1EVO:install:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=evolution --image=devdocker.infra.kube/cexiopay/database-evolution --tag="$(echo $CI_COMMIT_TAG | cut -d- -f1)" --install
  when: manual
  environment:
    name: evolution
    url: https://evolution-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

1EVO:rollback:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=evolution --image=devdocker.infra.kube/cexiopay/database-evolution --tag="$(echo $CI_COMMIT_TAG | cut -d- -f1)" --rollback
  when: manual
  environment:
    name: evolution
    url: https://evolution-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

2PRSN:install:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=presentation --image=devdocker.infra.kube/cexiopay/database-presentation --tag="$(echo $CI_COMMIT_TAG | cut -d- -f1)" --install
  when: manual
  environment:
    name: presentation
    url: https://presentation-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

2PRSN:rollback:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=presentation --image=devdocker.infra.kube/cexiopay/database-presentation --tag="$(echo $CI_COMMIT_TAG | cut -d- -f1)" --rollback
  when: manual
  environment:
    name: presentation
    url: https://presentation-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

3TEST:install:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=test --image=devdocker.infra.kube/cexiopay/database-test --tag="$(echo $CI_COMMIT_TAG | cut -d- -f1)" --install
  when: manual
  environment:
    name: test
    url: https://pay-cex-test.net
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

3TEST:rollback:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=test --image=devdocker.infra.kube/cexiopay/database-test --tag="$(echo $CI_COMMIT_TAG | cut -d- -f1)" --rollback
  when: manual
  environment:
    name: test
    url: https://pay-cex-test.net
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

4PROD:install:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=prod --kube-namespace=cryptopay --image=harbor.infra.kube/cexiopay/database-production --tag="$(echo $CI_COMMIT_TAG | cut -d- -f1)" --install
  when: manual
  environment:
    name: production
    url: https://cexiopay.band/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

4PROD:rollback:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=prod --kube-namespace=cryptopay --image=harbor.infra.kube/cexiopay/database-production --tag="$(echo $CI_COMMIT_TAG | cut -d- -f1)" --rollback
  when: manual
  environment:
    name: production
    url: https://pay-cex.io/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/
