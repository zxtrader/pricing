variables:
  IMAGE_HELM: harbor.infra.kube/infra/helm:3
  IMAGE_KUBECTL: bitnami/kubectl:1.20.2

.functions: &functions |
  function verify_runtime_version() {
    if [ -z "${CI_COMMIT_TAG}" ]; then
      echo "The function verify_runtime_version() is able to use for tags only. Variable CI_COMMIT_TAG is not set." >&2
      exit 127
    fi
    local EXPECTED_VERSION=$(echo "${CI_COMMIT_TAG}" | sed 's/^runtime-//g')
    local HELM_CHART_APP_VERSION=$(grep -e '^appVersion:' runtime/Chart.yaml | cut -d ':' -f 2 | tr -d '[:space:]')
    if [ "runtime-$HELM_CHART_APP_VERSION" != "$CI_COMMIT_TAG" ]; then
      echo "Helm Chart appVersion '${HELM_CHART_APP_VERSION}' is not same as tag version '${EXPECTED_VERSION}'. Your tag should named as 'runtime-$HELM_CHART_APP_VERSION' for the case." >&2
      exit 255
    fi
  }
  function kube_config_setup() {
    if [ -z "${KUBECONF_BASE64}" ]; then
      echo "kube_deploy_dev_image() wrong arguments. Expected environment variable KUBECONF_BASE64" >&2
      exit 1
    fi
    mkdir -p ~/.kube
    echo "$KUBECONF_BASE64" | base64 -d > ~/.kube/config
  }

before_script:
  - *functions

stages:
  - deploy
  - rollback
  - delete

# Runtime deployment TAGs
1EVO:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM}
    entrypoint: [""]
  script:
    - verify_runtime_version
    - kube_config_setup
    - cd runtime
    - helm --namespace "cryptopay-evolution" list
    - helm --namespace "cryptopay-evolution" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.evolution.yaml" tag .
    - helm --namespace "cryptopay-evolution" history tag --max=3
  when: manual
  environment:
    name: evolution
    url: https://evolution-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^runtime-.*/

1EVO:rollback:runtime:
  stage: rollback
  image:
    name: ${IMAGE_HELM}
    entrypoint: [""]
  script:
    - verify_runtime_version
    - kube_config_setup
    - cd runtime
    - helm --namespace "cryptopay-evolution" list
    - helm --namespace "cryptopay-evolution" history tag --max=3
    - helm --namespace "cryptopay-evolution" rollback --recreate-pods tag 0
    - helm --namespace "cryptopay-evolution" history tag --max=3
  when: manual
  environment:
    name: evolution
    url: https://evolution-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^runtime-.*/

1EVO:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM}
    entrypoint: [""]
  script:
    - verify_runtime_version
    - kube_config_setup
    - cd runtime
    - helm --namespace "cryptopay-evolution" list
    - helm --namespace "cryptopay-evolution" history tag --max=3
    - helm --namespace "cryptopay-evolution" uninstall  tag
  when: manual
  environment:
    name: evolution
    url: https://evolution-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^runtime-.*/

2PRSN:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM}
    entrypoint: [""]
  script:
    - verify_runtime_version
    - kube_config_setup
    - cd runtime
    - helm --namespace "cryptopay-presentation" list
    - helm --namespace "cryptopay-presentation" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.presentation.yaml" tag .
    - helm --namespace "cryptopay-presentation" history tag --max=3
  when: manual
  environment:
    name: presentation
    url: https://presentation-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^runtime-.*/

2PRSN:rollback:runtime:
  stage: rollback
  image:
    name: ${IMAGE_HELM}
    entrypoint: [""]
  script:
    - verify_runtime_version
    - kube_config_setup
    - cd runtime
    - helm --namespace "cryptopay-presentation" list
    - helm --namespace "cryptopay-presentation" history tag --max=3
    - helm --namespace "cryptopay-presentation" rollback --recreate-pods tag 0
    - helm --namespace "cryptopay-presentation" history tag --max=3
  when: manual
  environment:
    name: presentation
    url: https://presentation-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^runtime-.*/

2PRSN:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM}
    entrypoint: [""]
  script:
    - verify_runtime_version
    - kube_config_setup
    - cd runtime
    - helm --namespace "cryptopay-presentation" list
    - helm --namespace "cryptopay-presentation" history tag --max=3
    - helm --namespace "cryptopay-presentation" uninstall  tag
  when: manual
  environment:
    name: presentation
    url: https://presentation-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^runtime-.*/

4PROD:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM}
    entrypoint: [""]
  script:
    - verify_runtime_version
    - kube_config_setup
    - cd runtime
    - helm --namespace "cryptopay" list
    - helm --namespace "cryptopay" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.production.yaml" tag .
    - helm --namespace "cryptopay" history tag --max=3
  when: manual
  environment:
    name: production
    url: https://cryptopay.band/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^runtime-.*/

4PROD:rollback:runtime:
  stage: rollback
  image:
    name: ${IMAGE_HELM}
    entrypoint: [""]
  script:
    - verify_runtime_version
    - kube_config_setup
    - cd runtime
    - helm --namespace "cryptopay" list
    - helm --namespace "cryptopay" history tag --max=3
    - helm --namespace "cryptopay" rollback --recreate-pods tag 0
    - helm --namespace "cryptopay" history tag --max=3
  when: manual
  environment:
    name: production
    url: https://cryptopay.band/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^runtime-.*/

4PROD:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM}
    entrypoint: [""]
  script:
    - verify_runtime_version
    - kube_config_setup
    - cd runtime
    - helm --namespace "cryptopay" list
    - helm --namespace "cryptopay" history tag --max=3
    - helm --namespace "cryptopay" uninstall  tag
  when: manual
  environment:
    name: production
    url: https://cryptopay.band/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^runtime-.*/

#
#
# Database migration master/dev
#
#
devel-1EVO:install:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=evolution --image=devdocker.infra.kube/cryptopay/database-evolution --tag="$DEVEL_DB_IMAGE_TAG" --install
  when: manual
  environment:
    name: evolution
    url: https://evolution-cryptopay.dev.kube
  only:
    variables:
      - $DEVEL_DB_IMAGE_TAG

devel-1EVO:rollback:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=evolution --image=devdocker.infra.kube/cryptopay/database-evolution --tag="$DEVEL_DB_IMAGE_TAG" --rollback
  when: manual
  environment:
    name: evolution
    url: https://evolution-cryptopay.dev.kube
  only:
    variables:
      - $DEVEL_DB_IMAGE_TAG

devel-2PRSN:install:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=presentation --image=devdocker.infra.kube/cryptopay/database-presentation --tag="$DEVEL_DB_IMAGE_TAG" --install
  when: manual
  environment:
    name: presentation
    url: https://presentation-cryptopay.dev.kube
  only:
    variables:
      - $DEVEL_DB_IMAGE_TAG

devel-2PRSN:rollback:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=presentation --image=devdocker.infra.kube/cryptopay/database-presentation --tag="$DEVEL_DB_IMAGE_TAG" --rollback
  when: manual
  environment:
    name: presentation
    url: https://presentation-cryptopay.dev.kube
  only:
    variables:
      - $DEVEL_DB_IMAGE_TAG

#
#
# Database migration TAGs
#
#
1EVO:install:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=evolution --image=devdocker.infra.kube/cryptopay/database-evolution --tag="$(echo $CI_COMMIT_TAG | sed 's/^DB-//g')" --install
  when: manual
  environment:
    name: evolution
    url: https://evolution-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^DB-.*/

1EVO:rollback:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=evolution --image=devdocker.infra.kube/cryptopay/database-evolution --tag="$(echo $CI_COMMIT_TAG | sed 's/^DB-//g')" --rollback
  when: manual
  environment:
    name: evolution
    url: https://evolution-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^DB-.*/

2PRSN:install:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=presentation --image=devdocker.infra.kube/cryptopay/database-presentation --tag="$(echo $CI_COMMIT_TAG | sed 's/^DB-//g')" --install
  when: manual
  environment:
    name: presentation
    url: https://presentation-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^DB-.*/

2PRSN:rollback:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=presentation --image=devdocker.infra.kube/cryptopay/database-presentation --tag="$(echo $CI_COMMIT_TAG | sed 's/^DB-//g')" --rollback
  when: manual
  environment:
    name: presentation
    url: https://presentation-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^DB-.*/

3UAT:install:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=preproduction --image=devdocker.infra.kube/cryptopay/database-preproduction --tag="$(echo $CI_COMMIT_TAG | sed 's/^DB-//g')" --install
  when: manual
  environment:
    name: preproduction
    url: https://preproduction-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^DB-.*/

3UAT:rollback:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=preproduction --image=devdocker.infra.kube/cryptopay/database-preproduction --tag="$(echo $CI_COMMIT_TAG | sed 's/^DB-//g')" --rollback
  when: manual
  environment:
    name: preproduction
    url: https://preproduction-cryptopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^DB-.*/

4PROD:install:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=prod --kube-namespace=cryptopay --image=harbor.infra.kube/cryptopay/database-production --tag="$(echo $CI_COMMIT_TAG | sed 's/^DB-//g')" --install
  when: manual
  environment:
    name: production
    url: https://cryptopay.band/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^DB-.*/

4PROD:rollback:db:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=prod --kube-namespace=cryptopay --image=harbor.infra.kube/cryptopay/database-production --tag="$(echo $CI_COMMIT_TAG | sed 's/^DB-//g')" --rollback
  when: manual
  environment:
    name: production
    url: https://cryptopay.band/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^DB-.*/
