variables:
  IMAGE_HELM2: alpine/helm:2.14.0
  # IMAGE_HELM3: harbor.infra.kube/infra/helm:3
  IMAGE_HELM3: devdocker.infra.kube/cexiolabs/docker/helm3/snapshot:master.dcb37861
  IMAGE_KUBECTL: bitnami/kubectl:1.20.2

.functions: &functions |
  function verify_runtime_version_helm2() {
    if [ -z "${CI_COMMIT_TAG}" ]; then
      echo "The function verify_runtime_version_helm3() is able to use for tags only. Variable CI_COMMIT_TAG is not set." >&2
      exit 127
    fi
    local EXPECTED_VERSION=$(echo "${CI_COMMIT_TAG}" | cut -d- -f1)
    local HELM_CHART_APP_VERSION=$(grep -e '^appVersion:' runtime/Chart.yaml | cut -d ':' -f 2 | tr -d '[:space:]')
    if [ "$HELM_CHART_APP_VERSION-runtime-helm2" != "$CI_COMMIT_TAG" ]; then
      echo "Helm Chart appVersion '${HELM_CHART_APP_VERSION}' is not same as tag version '${EXPECTED_VERSION}'. Your tag should named as '$HELM_CHART_APP_VERSION-runtime-helm2' for the case." >&2
      exit 255
    fi
  }
  function verify_runtime_version_helm3() {
    if [ -z "${CI_COMMIT_TAG}" ]; then
      echo "The function verify_runtime_version_helm3() is able to use for tags only. Variable CI_COMMIT_TAG is not set." >&2
      exit 127
    fi
    local EXPECTED_VERSION=$(echo "${CI_COMMIT_TAG}" | cut -d- -f1)
    local HELM_CHART_APP_VERSION=$(grep -e '^appVersion:' runtime/Chart.yaml | cut -d ':' -f 2 | tr -d '[:space:]')
    if [ "$HELM_CHART_APP_VERSION-runtime" != "$CI_COMMIT_TAG" ]; then
      echo "Helm Chart appVersion '${HELM_CHART_APP_VERSION}' is not same as tag version '${EXPECTED_VERSION}'. Your tag should named as '$HELM_CHART_APP_VERSION-runtime' for the case." >&2
      exit 255
    fi
  }
  function kube_config_setup() {
    if [ -z "${KUBECONF_BASE64}" ]; then
      echo "kube_deploy_dev_image() wrong arguments. Expected environment variable KUBECONF_BASE64" >&2
      exit 1
    fi
    mkdir -p ~/.kube
    echo "$KUBECONF_BASE64" | base64 -d > ~/.kube/config
  }

before_script:
  - *functions

stages:
  - deploy
  - rollback
  - delete

include:
  - local: /.gitlab-ci-infratest.yml

# HELM 3 Runtime deployment
1EVO:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - mkdir tmp
    - "kubectl --namespace 'cexiopay-evolution-admin' get --output=json ConfigMap/cpservice                 | jq -r \".data\" | yq eval -P  > tmp/configmap-cpservice.yaml"
    - "kubectl --namespace 'cexiopay-evolution-admin' get --output=json ConfigMap/messengerbridge-files     | jq -r \".data\" | yq eval -P  > tmp/configmap-messengerbridge-files.yaml"
    - "kubectl --namespace 'cexiopay-evolution-admin' get --output=json ConfigMap/processing-envvars-setup  | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars-setup.yaml"
    - "kubectl --namespace 'cexiopay-evolution-admin' get --output=json ConfigMap/processing-envvars        | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars.yaml"
    - "kubectl --namespace 'cexiopay-evolution-admin' get --output=json ConfigMap/processing-files          | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-files.yaml"
    - "kubectl --namespace 'cexiopay-evolution-admin' get --output=json Secrets/api                         | jq -r \".data\" | yq eval -P  > tmp/secret-api.yaml"
    - "kubectl --namespace 'cexiopay-evolution-admin' get --output=json Secrets/identity                    | jq -r \".data\" | yq eval -P  > tmp/secret-identity.yaml"
    - "kubectl --namespace 'cexiopay-evolution-admin' get --output=json Secrets/messengerbridge             | jq -r \".data\" | yq eval -P  > tmp/secret-messengerbridge.yaml"
    - "kubectl --namespace 'cexiopay-evolution-admin' get --output=json Secrets/processing                  | jq -r \".data\" | yq eval -P  > tmp/secret-processing.yaml"
    - "kubectl --namespace 'cexiopay-evolution-admin' get --output=json Secrets/processing-setup            | jq -r \".data\" | yq eval -P  > tmp/secret-processing-setup.yaml"
    - helm --namespace "cexiopay-evolution" list
    - helm --namespace "cexiopay-evolution" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.evolution.yaml" "blue" .
    - helm --namespace "cexiopay-evolution" history "blue" --max=3
  when: manual
  environment:
    name: evolution
    url: https://evolution-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

1EVO:rollback:runtime:
  stage: rollback
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-evolution" list
    - helm --namespace "cexiopay-evolution" history "blue" --max=3
    - helm --namespace "cexiopay-evolution" rollback --recreate-pods "blue" 0
    - helm --namespace "cexiopay-evolution" history "blue" --max=3
  when: manual
  environment:
    name: evolution
    url: https://evolution-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

1EVO:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-evolution" list
    - helm --namespace "cexiopay-evolution" history "blue" --max=3
    - helm --namespace "cexiopay-evolution" uninstall  "blue"
  when: manual
  environment:
    name: evolution
    url: https://evolution-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

2PRSN:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - mkdir tmp
    - "kubectl --namespace 'cexiopay-presentation-admin' get --output=json ConfigMap/cpservice                 | jq -r \".data\" | yq eval -P  > tmp/configmap-cpservice.yaml"
    - "kubectl --namespace 'cexiopay-presentation-admin' get --output=json ConfigMap/messengerbridge-files     | jq -r \".data\" | yq eval -P  > tmp/configmap-messengerbridge-files.yaml"
    - "kubectl --namespace 'cexiopay-presentation-admin' get --output=json ConfigMap/processing-envvars-setup  | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars-setup.yaml"
    - "kubectl --namespace 'cexiopay-presentation-admin' get --output=json ConfigMap/processing-envvars        | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars.yaml"
    - "kubectl --namespace 'cexiopay-presentation-admin' get --output=json ConfigMap/processing-files          | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-files.yaml"
    - "kubectl --namespace 'cexiopay-presentation-admin' get --output=json Secrets/api                         | jq -r \".data\" | yq eval -P  > tmp/secret-api.yaml"
    - "kubectl --namespace 'cexiopay-presentation-admin' get --output=json Secrets/identity                    | jq -r \".data\" | yq eval -P  > tmp/secret-identity.yaml"
    - "kubectl --namespace 'cexiopay-presentation-admin' get --output=json Secrets/messengerbridge             | jq -r \".data\" | yq eval -P  > tmp/secret-messengerbridge.yaml"
    - "kubectl --namespace 'cexiopay-presentation-admin' get --output=json Secrets/processing                  | jq -r \".data\" | yq eval -P  > tmp/secret-processing.yaml"
    - "kubectl --namespace 'cexiopay-presentation-admin' get --output=json Secrets/processing-setup            | jq -r \".data\" | yq eval -P  > tmp/secret-processing-setup.yaml"
    - helm --namespace "cexiopay-presentation" list
    - helm --namespace "cexiopay-presentation" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.presentation.yaml" "blue" .
    - helm --namespace "cexiopay-presentation" history "blue" --max=3
  when: manual
  environment:
    name: presentation
    url: https://presentation-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

2PRSN:rollback:runtime:
  stage: rollback
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-presentation" list
    - helm --namespace "cexiopay-presentation" history "blue" --max=3
    - helm --namespace "cexiopay-presentation" rollback --recreate-pods "blue" 0
    - helm --namespace "cexiopay-presentation" history "blue" --max=3
  when: manual
  environment:
    name: presentation
    url: https://presentation-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

2PRSN:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-presentation" list
    - helm --namespace "cexiopay-presentation" history "blue" --max=3
    - helm --namespace "cexiopay-presentation" uninstall  "blue"
  when: manual
  environment:
    name: presentation
    url: https://presentation-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

3TEST:blue:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - mkdir tmp
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json ConfigMap/cpservice                 | jq -r \".data\" | yq eval -P  > tmp/configmap-cpservice.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json ConfigMap/messengerbridge-files     | jq -r \".data\" | yq eval -P  > tmp/configmap-messengerbridge-files.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json ConfigMap/processing-envvars-setup  | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars-setup.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json ConfigMap/processing-envvars        | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json ConfigMap/processing-files          | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-files.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json Secrets/api                         | jq -r \".data\" | yq eval -P  > tmp/secret-api.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json Secrets/identity                    | jq -r \".data\" | yq eval -P  > tmp/secret-identity.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json Secrets/messengerbridge             | jq -r \".data\" | yq eval -P  > tmp/secret-messengerbridge.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json Secrets/processing                  | jq -r \".data\" | yq eval -P  > tmp/secret-processing.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json Secrets/processing-setup            | jq -r \".data\" | yq eval -P  > tmp/secret-processing-setup.yaml"
    - helm --namespace "cexiopay-test" list
    - helm --namespace "cexiopay-test" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.test.yaml" "blue" .
    - helm --namespace "cexiopay-test" history "blue" --max=3
  when: manual
  environment:
    name: test
    url: https://board.pay-cex-test.net/
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

3TEST:green:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - mkdir tmp
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json ConfigMap/cpservice                 | jq -r \".data\" | yq eval -P  > tmp/configmap-cpservice.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json ConfigMap/messengerbridge-files     | jq -r \".data\" | yq eval -P  > tmp/configmap-messengerbridge-files.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json ConfigMap/processing-envvars-setup  | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars-setup.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json ConfigMap/processing-envvars        | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json ConfigMap/processing-files          | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-files.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json Secrets/api                         | jq -r \".data\" | yq eval -P  > tmp/secret-api.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json Secrets/identity                    | jq -r \".data\" | yq eval -P  > tmp/secret-identity.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json Secrets/messengerbridge             | jq -r \".data\" | yq eval -P  > tmp/secret-messengerbridge.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json Secrets/processing                  | jq -r \".data\" | yq eval -P  > tmp/secret-processing.yaml"
    - "kubectl --namespace 'cexiopay-test-admin' get --output=json Secrets/processing-setup            | jq -r \".data\" | yq eval -P  > tmp/secret-processing-setup.yaml"
    - helm --namespace "cexiopay-test" list
    - helm --namespace "cexiopay-test" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.test.yaml" "green" .
    - helm --namespace "cexiopay-test" history "green" --max=3
  when: manual
  environment:
    name: test
    url: https://board.pay-cex-test.net/
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

3TEST:blue:rollback:runtime:
  stage: rollback
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-test" list
    - helm --namespace "cexiopay-test" history "blue" --max=3
    - helm --namespace "cexiopay-test" rollback --recreate-pods "blue" 0
    - helm --namespace "cexiopay-test" history "blue" --max=3
  when: manual
  environment:
    name: test
    url: https://board.pay-cex-test.net/
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

3TEST:blue:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-test" list
    - helm --namespace "cexiopay-test" history "blue" --max=3
    - helm --namespace "cexiopay-test" uninstall  "blue"
  when: manual
  environment:
    name: test
    url: https://board.pay-cex-test.net/
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

3TEST:green:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay-test" list
    - helm --namespace "cexiopay-test" history "green" --max=3
    - helm --namespace "cexiopay-test" uninstall  "green"
  when: manual
  environment:
    name: test
    url: https://board.pay-cex-test.net/
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

4PROD:blue:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - mkdir tmp
    - "kubectl --namespace 'cryptopay' get --output=json ConfigMap/cpservice                 | jq -r \".data\" | yq eval -P  > tmp/configmap-cpservice.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json ConfigMap/messengerbridge-files     | jq -r \".data\" | yq eval -P  > tmp/configmap-messengerbridge-files.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json ConfigMap/processing-envvars-setup  | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars-setup.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json ConfigMap/processing-envvars        | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json ConfigMap/processing-files          | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-files.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json Secrets/api                         | jq -r \".data\" | yq eval -P  > tmp/secret-api.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json Secrets/identity                    | jq -r \".data\" | yq eval -P  > tmp/secret-identity.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json Secrets/messengerbridge             | jq -r \".data\" | yq eval -P  > tmp/secret-messengerbridge.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json Secrets/processing                  | jq -r \".data\" | yq eval -P  > tmp/secret-processing.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json Secrets/processing-setup            | jq -r \".data\" | yq eval -P  > tmp/secret-processing-setup.yaml"
    - helm --namespace "cexiopay" list
    - helm --namespace "cexiopay" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.production.yaml" "blue" .
    - helm --namespace "cexiopay" history "blue" --max=3
  when: manual
  environment:
    name: production
    url: https://pay-cex.io/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

4PROD:green:install:runtime:
  stage: deploy
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - mkdir tmp
    - "kubectl --namespace 'cryptopay' get --output=json ConfigMap/cpservice                 | jq -r \".data\" | yq eval -P  > tmp/configmap-cpservice.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json ConfigMap/messengerbridge-files     | jq -r \".data\" | yq eval -P  > tmp/configmap-messengerbridge-files.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json ConfigMap/processing-envvars-setup  | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars-setup.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json ConfigMap/processing-envvars        | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-envvars.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json ConfigMap/processing-files          | jq -r \".data\" | yq eval -P  > tmp/configmap-processing-files.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json Secrets/api                         | jq -r \".data\" | yq eval -P  > tmp/secret-api.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json Secrets/identity                    | jq -r \".data\" | yq eval -P  > tmp/secret-identity.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json Secrets/messengerbridge             | jq -r \".data\" | yq eval -P  > tmp/secret-messengerbridge.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json Secrets/processing                  | jq -r \".data\" | yq eval -P  > tmp/secret-processing.yaml"
    - "kubectl --namespace 'cryptopay' get --output=json Secrets/processing-setup            | jq -r \".data\" | yq eval -P  > tmp/secret-processing-setup.yaml"
    - helm --namespace "cexiopay" list
    - helm --namespace "cexiopay" upgrade --install --history-max 3 --values "values-base.yaml" --values "values.production.yaml" "green" .
    - helm --namespace "cexiopay" history "green" --max=3
  when: manual
  environment:
    name: production
    url: https://pay-cex.io/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

4PROD:blue:rollback:runtime:
  stage: rollback
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay" list
    - helm --namespace "cexiopay" history "blue" --max=3
    - helm --namespace "cexiopay" rollback --recreate-pods "blue" 0
    - helm --namespace "cexiopay" history "blue" --max=3
  when: manual
  environment:
    name: production
    url: https://pay-cex.io/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

4PROD:blue:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay" list
    - helm --namespace "cexiopay" history "blue" --max=3
    - helm --namespace "cexiopay" uninstall  "blue"
  when: manual
  environment:
    name: production
    url: https://pay-cex.io/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/

4PROD:green:delete:runtime:
  stage: delete
  image:
    name: ${IMAGE_HELM3}
    entrypoint: [""]
  script:
    - verify_runtime_version_helm3
    - kube_config_setup
    - cd runtime
    - helm --namespace "cexiopay" list
    - helm --namespace "cexiopay" history "green" --max=3
    - helm --namespace "cexiopay" uninstall  "green"
  when: manual
  environment:
    name: production
    url: https://pay-cex.io/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-runtime$/




#
#
# Database migration TAGs
#
#
1EVO:install:db:
  image:
    name: ${IMAGE_KUBECTL}
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=evolution --image=devdocker.infra.kube/cexiopay/database-evolution --tag="$(echo $CI_COMMIT_TAG | rev | cut -d- -f2- | rev)" --install
  when: manual
  environment:
    name: evolution
    url: https://evolution-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

1EVO:rollback:db:
  image:
    name: ${IMAGE_KUBECTL}
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=evolution --image=devdocker.infra.kube/cexiopay/database-evolution --tag="$(echo $CI_COMMIT_TAG | rev | cut -d- -f2- | rev)" --rollback
  when: manual
  environment:
    name: evolution
    url: https://evolution-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

2PRSN:install:db:
  image:
    name: ${IMAGE_KUBECTL}
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=presentation --image=devdocker.infra.kube/cexiopay/database-presentation --tag="$(echo $CI_COMMIT_TAG | rev | cut -d- -f2- | rev)" --install
  when: manual
  environment:
    name: presentation
    url: https://presentation-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

2PRSN:rollback:db:
  image:
    name: ${IMAGE_KUBECTL}
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=presentation --image=devdocker.infra.kube/cexiopay/database-presentation --tag="$(echo $CI_COMMIT_TAG | rev | cut -d- -f2- | rev)" --rollback
  when: manual
  environment:
    name: presentation
    url: https://presentation-cexiopay.dev.kube
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

3TEST:install:db:
  image:
    name: ${IMAGE_KUBECTL}
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=test --image=devdocker.infra.kube/cexiopay/database-test --tag="$(echo $CI_COMMIT_TAG | rev | cut -d- -f2- | rev)" --install
  when: manual
  environment:
    name: test
    url: https://pay-cex-test.net
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

3TEST:rollback:db:
  image:
    name: ${IMAGE_KUBECTL}
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=test --image=devdocker.infra.kube/cexiopay/database-test --tag="$(echo $CI_COMMIT_TAG | rev | cut -d- -f2- | rev)" --rollback
  when: manual
  environment:
    name: test
    url: https://pay-cex-test.net
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

4PROD:install:db:
  image:
    name: ${IMAGE_KUBECTL}
    entrypoint: [""]
  stage: deploy
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=prod --kube-namespace=cexiopay --image=harbor.infra.kube/cexiopay/database-production --tag="$(echo $CI_COMMIT_TAG | rev | cut -d- -f2- | rev)" --install
  when: manual
  environment:
    name: production
    url: https://cexiopay.band/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/

4PROD:rollback:db:
  image:
    name: ${IMAGE_KUBECTL}
    entrypoint: [""]
  stage: rollback
  script:
    - export KUBECONFIG=/tmp/.kube-config
    - echo "$KUBECONF_BASE64" | base64 -d > "${KUBECONFIG}"
    - ./migration/migration-exec.sh --kube-context=prod --kube-namespace=cexiopay --image=harbor.infra.kube/cexiopay/database-production --tag="$(echo $CI_COMMIT_TAG | rev | cut -d- -f2- | rev)" --rollback
  when: manual
  environment:
    name: production
    url: https://pay-cex.io/
  tags:
    - crtpdpl
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /-database$/
